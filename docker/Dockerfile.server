FROM node:16-alpine as builder

RUN apk add yarn bash

WORKDIR /app
ENV NODE_ENV=production

COPY package.json /app
COPY yarn.lock    /app
COPY lerna.json   /app

COPY packages/server/package.json /app/packages/server/
COPY packages/server/yarn.lock    /app/packages/server/

COPY packages/shared/package.json /app/packages/shared/
# COPY packages/shared/yarn.lock    /app/packages/shared/

RUN yarn

RUN npx lerna bootstrap --ignore-scripts -- --production --no-optional
# RUN npx lerna bootstrap --hoist --ignore-scripts -- --production --no-optional

COPY . /app

RUN cd packages/server && yarn build

# ------------------------------------------------------------------------------

FROM node:16-alpine

WORKDIR /app
ENV NODE_ENV=production

COPY --from=builder /app/lerna.json /app/lerna.json
COPY --from=builder /app/package.json /app/package.json
COPY --from=builder /app/yarn.lock /app/yarn.lock
COPY --from=builder /app/node_modules /app/node_modules

COPY --from=builder /app/packages/server/dist /app/packages/server
COPY --from=builder /app/packages/server/node_modules /app/packages/server/node_modules
COPY --from=builder /app/packages/server/package.json /app/packages/server/package.json
COPY --from=builder /app/packages/server/yarn.lock /app/packages/server/yarn.lock

COPY --from=builder /app/packages/shared/dist /app/packages/shared/dist
COPY --from=builder /app/packages/shared/node_modules /app/packages/shared/node_modules
COPY --from=builder /app/packages/shared/package.json /app/packages/shared/package.json

CMD ["/usr/local/bin/node", "/app/packages/server/main.js"]
